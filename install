#!/bin/bash
#

function deps () {
  for file in ${@}; do
    [ -f ${file} ] &&
      if [ ! -f /tmp/initrd${file} ]; then
        cp -v ${file} /tmp/initrd${file}
        if [ $? != 0 ]; then
          echo "Can't copy \"${file}\""
          exit 1
        fi
      fi
  done
}

function copy-tools() {
  # copy needed tools and their dependencies into initrd structure
  while read tool; do
    toolpath=$(which ${tool})
    if [ $? != 0 ]; then
      echo "$tool not found! Please install"
      exit 1
    fi
    cp -v ${toolpath} bin/
    deps "($(ldd ${toolpath}))"
  done <${inst_dir}/deps.lst
}

initrd() {
  [ -d /tmp/initrd ] && rm -rf /tmp/initrd
  mkdir /tmp/initrd && cd /tmp/initrd
  # extract current initrd
  gunzip -c ${initrd} | cpio -i --make-directories
  # modify
  copy-tools
  mod_file=${inst_dir}/distro/${distro}/mod
  sed -i -e "/${proc_insert_point}/r ${mod_file}" -e "//N" ${init_script}
  sed -i "/${call_insert_point}/a ${proc_name}" ${init_script}
  # create new
  find ./ | cpio -H newc -o > /tmp/initrd.cpio
  gzip -c /tmp/initrd.cpio > ${initrd}-mod
  # clean up
  cd ${inst_dir}
  rm -rf /tmp/initrd.cpio /tmp/initrd
}

grub-mod() {
  case ${1} in
    "grub1")
      # clean existing mod
      grubby -o ${grub_config} --grub --remove-kernel=${kernel}-mod
      # create new mod
      [ ! -f ${kernel}-mod ] && ln -s ${kernel} ${kernel}-mod
      grub_title="$(cat /etc/redhat-release) $(uname -r) mod"
      grub_kernel=${kernel}-mod
      grub_initrd=${initrd}-mod
      grubby -o ${grub_config} --grub --copy-default --add-kernel="${grub_kernel}" \
        --title="${grub_title}" --initrd="${grub_initrd}" --make-default
    ;;
    "grub2")
      [ ! -f ${kernel}-mod ] && ln -s ${kernel} ${kernel}-mod
      grub-mkconfig -o ${grub_config}
    ;;
  esac
}

# store directory from where we run install
inst_dir=$(pwd)

# check distro and set distro specific variables
distro=""
[ -f /etc/redhat-release ] &&
  if [[ "$(cat /etc/redhat-release)" == *CentOS\ release\ 6* ]]; then
    distro="centos-6"
    initrd="/boot/initramfs-$(uname -r).img"
    kernel="/boot/vmlinuz-$(uname -r)"
    init_script="init"
    proc_insert_point="^export PATH=.*"
    proc_name="growroot"
    call_insert_point="^source_all pre-mount"
    grub_config="/boot/grub/grub.conf"
    grub="grub1"
  fi
[ -f /etc/issue ] &&
  if [[ "$(cat /etc/issue)" == *Debian\ GNU\/Linux\ 7* ]]; then
    distro="debian-7"
    initrd="/boot/initrd.img-$(uname -r)"
    kernel="/boot/vmlinuz-$(uname -r)"
    init_script="scripts/local"
    proc_insert_point="^mountroot()"
    proc_name="\        growroot"
    call_insert_point="^.*modprobe \${FSTYPE}"
    grub_config="/boot/grub/grub.cfg"
    grub="grub2"
  elif [[ "$(cat /etc/issue)" == *Debian\ GNU\/Linux\ 6* ]]; then
    distro="debian-6"
    initrd="/boot/initrd.img-$(uname -r)"
    kernel="/boot/vmlinuz-$(uname -r)"
    init_script="scripts/local"
    proc_insert_point="^mountroot()"
    proc_name="\        growroot"
    call_insert_point="^.*modprobe \${FSTYPE}"
    grub_config="/boot/grub/grub.cfg"
    grub="grub2"
  fi

# exit if distro is not supported
if [ "${distro}" == "" ]; then
  echo "Distribution NOT supported!"
  exit 1
fi

initrd
grub-mod ${grub}

exit 0
